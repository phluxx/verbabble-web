{"ast":null,"code":"export default {\n  data() {\n    return {\n      formData: {\n        username: '',\n        password: '',\n        password_repeat: '',\n        email: ''\n      },\n      message: ''\n    };\n  },\n  methods: {\n    submitForm() {\n      const formData = new FormData();\n      formData.append('username', this.formData.username);\n      formData.append('password', this.formData.password);\n      formData.append('password_repeat', this.formData.password_repeat);\n      formData.append('email', this.formData.email);\n      fetch('https://auth.verbabble.com/api/v3/flows/executor/verbabbler-enrollment', {\n        method: 'POST',\n        body: formData\n      }).then(response => {\n        if (response.ok) {\n          this.message = 'Enrollment successful. Please check your email.';\n          this.$refs.form.reset();\n        } else {\n          this.message = 'Something went wrong. Please contact support@verbabble.com.';\n        }\n      }).catch(() => {\n        this.message = 'Something went wrong. Please try again later.';\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","formData","username","password","password_repeat","email","message","methods","submitForm","FormData","append","fetch","method","body","then","response","ok","$refs","form","reset","catch"],"sources":["/home/phlux/verbabble-web/src/views/JoinPage.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"join-content\" style=\"background: linear-gradient(to bottom, #00FFFF, #008080);\">\n      <img src=\"https://f005.backblazeb2.com/file/verbabble/fulllogo_transparent_nobuffer.png\" alt=\"Verbabble Logo\" class=\"logo\" />\n      <h1>Join Verbabble!</h1>\n    <form @submit.prevent=\"submitForm\" ref=\"form\" class=\"enrollment-form\">\n      <label for=\"username\">Username:</label><br>\n      <input type=\"text\" id=\"username\" v-model=\"formData.username\" pattern=\"[a-zA-Z][a-zA-Z0-9_-^]{0,31}\" required><br>\n      <label for=\"password\">Password:</label><br>\n      <input type=\"password\" id=\"password\" v-model=\"formData.password\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[-_^$&+,:;=?@#|'<>.^*()%!]).{12,}$\" required><br>\n      <label for=\"password_repeat\">Verify Password:</label><br>\n      <input type=\"password\" id=\"password_repeat\" v-model=\"formData.password_repeat\" required><br>\n      <label for=\"email\">Email:</label><br>\n      <input type=\"email\" id=\"email\" v-model=\"formData.email\" required><br>\n      <button type=\"submit\">Join Verbabble!</button>\n    </form>\n    <p>{{ message }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      formData: {\n        username: '',\n        password: '',\n        password_repeat: '',\n        email: ''\n      },\n      message: ''\n    };\n  },\n  methods: {\n    submitForm() {\n      const formData = new FormData();\n      formData.append('username', this.formData.username);\n      formData.append('password', this.formData.password);\n      formData.append('password_repeat', this.formData.password_repeat);\n      formData.append('email', this.formData.email);\n\n      fetch('https://auth.verbabble.com/api/v3/flows/executor/verbabbler-enrollment', {\n        method: 'POST',\n        body: formData\n      })\n      .then(response => {\n        if (response.ok) {\n          this.message = 'Enrollment successful. Please check your email.';\n          this.$refs.form.reset();\n        } else {\n          this.message = 'Something went wrong. Please contact support@verbabble.com.';\n        }\n      })\n      .catch(() => {\n        this.message = 'Something went wrong. Please try again later.';\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.home {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.join-content {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-align: center;\n}\n\n.join-content a {\n  color: rgba(59, 0, 64, 255);\n  text-decoration: none;\n}\n\n.join-content a:hover {\n  text-decoration: underline;\n}\n\n.logo {\n  max-width: 200px;\n  height: auto;\n  margin-bottom: 20px;\n}\n\n.content {\n  max-width: 800px;\n  padding: 20px;\n  align-items: center;\n  text-align: center;\n}\n\n.rounded-button {\n  border: none;\n  border-radius: 50px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-weight: bold;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  margin: 10px;\n}\n\n.sign-up {\n  background-color: rgba(245, 69, 255, 1);\n  color: white;\n}\n\n.chat-now {\n  background-color: rgba(59, 0, 64, 1);\n  color: white;\n}\n\n.enrollment-form input {\n  border-radius: 10px;\n  padding: 5px;\n  margin-bottom: 10px;\n}\n\n.enrollment-form label {\n  display: block;\n}\n\n.enrollment-form button {\n  background-color: rgba(245, 69, 255, 255);\n  color: white;\n  font-weight: bold;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 50px;\n  cursor: pointer;\n}\n\n.enrollment-form button:hover {\n  background-color: rgba(168, 48, 221, 255);\n}\n\n@media (max-width: 768px) {\n  .logo {\n    width: 80%;\n  }\n}\n</style>\n\n"],"mappings":"AAsBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE,EAAE;QACnBC,KAAK,EAAE;MACT,CAAC;MACDC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,MAAMP,QAAO,GAAI,IAAIQ,QAAQ,CAAC,CAAC;MAC/BR,QAAQ,CAACS,MAAM,CAAC,UAAU,EAAE,IAAI,CAACT,QAAQ,CAACC,QAAQ,CAAC;MACnDD,QAAQ,CAACS,MAAM,CAAC,UAAU,EAAE,IAAI,CAACT,QAAQ,CAACE,QAAQ,CAAC;MACnDF,QAAQ,CAACS,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAACT,QAAQ,CAACG,eAAe,CAAC;MACjEH,QAAQ,CAACS,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,QAAQ,CAACI,KAAK,CAAC;MAE7CM,KAAK,CAAC,wEAAwE,EAAE;QAC9EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEZ;MACR,CAAC,EACAa,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACf,IAAI,CAACV,OAAM,GAAI,iDAAiD;UAChE,IAAI,CAACW,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC;QACzB,OAAO;UACL,IAAI,CAACb,OAAM,GAAI,6DAA6D;QAC9E;MACF,CAAC,EACAc,KAAK,CAAC,MAAM;QACX,IAAI,CAACd,OAAM,GAAI,+CAA+C;MAChE,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}