{"ast":null,"code":"export default {\n  data() {\n    return {\n      formData: {\n        username: '',\n        password: '',\n        password_repeat: '',\n        email: ''\n      },\n      usernameError: '',\n      passwordError: '',\n      passwordRepeatError: '',\n      emailError: '',\n      message: ''\n    };\n  },\n  methods: {\n    validateUsername() {\n      this.usernameError = /^[a-zA-Z][a-zA-Z0-9_-^]{0,31}$/.test(this.formData.username) ? '' : 'Usernames must begin with a letter, and can only contain letters, numbers, and the special characters: -_^';\n    },\n    validatePassword() {\n      this.passwordError = this.formData.password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[-_^$&+,:;=?@#|'<>.^*()%!]).{12,}$/) ? '' : 'Password must be at least 12 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character';\n    },\n    validatePasswordRepeat() {\n      this.passwordRepeatError = this.formData.password === this.formData.password_repeat ? '' : 'Passwords do not match';\n    },\n    validateEmail() {\n      this.emailError = this.formData.email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/) ? '' : 'Invalid email address';\n    },\n    submitForm() {\n      // Form submission logic\n    }\n  }\n};","map":{"version":3,"names":["data","formData","username","password","password_repeat","email","usernameError","passwordError","passwordRepeatError","emailError","message","methods","validateUsername","test","validatePassword","match","validatePasswordRepeat","validateEmail","submitForm"],"sources":["/home/phlux/verbabble-web/src/views/JoinPage.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"join-content\" style=\"background: linear-gradient(to bottom, #00FFFF, #008080);\">\n      <img src=\"https://f005.backblazeb2.com/file/verbabble/fulllogo_transparent_nobuffer.png\" alt=\"Verbabble Logo\" class=\"logo\" />\n      <h1>Join Verbabble!</h1>\n    <form @submit.prevent=\"submitForm\" ref=\"form\" class=\"enrollment-form\">\n      <label for=\"username\">Username:</label><br>\n      <input type=\"text\" id=\"username\" v-model=\"formData.username\" @input=\"validateUsername\" pattern=\"[a-zA-Z][a-zA-Z0-9_-^]{0,31}\" required><br>\n      <p v-if=\"usernameError\" class=\"error-message\">{{ usernameError }}</p>\n      <label for=\"password\">Password:</label><br>\n      <input type=\"password\" id=\"password\" v-model=\"formData.password\" @input=\"validatePassword\" pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[-_^$&+,:;=?@#|'<>.^*()%!]).{12,}$\" required><br>\n      <p v-if=\"passwordError\" class=\"error-message\">{{ passwordError }}</p>\n      <label for=\"password_repeat\">Verify Password:</label><br>\n      <input type=\"password\" id=\"password_repeat\" v-model=\"formData.password_repeat\" @input=\"validatePasswordRepeat\" required><br>\n      <p v-if=\"passwordRepeatError\" class=\"error-message\">{{ passwordRepeatError }}</p>\n      <label for=\"email\">Email:</label><br>\n      <input type=\"email\" id=\"email\" v-model=\"formData.email\" @input=\"validateEmail\" required><br>\n      <p v-if=\"emailError\" class=\"error-message\">{{ emailError }}</p>\n      <button type=\"submit\">Submit</button>\n    </form>\n    <p>{{ message }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      formData: {\n        username: '',\n        password: '',\n        password_repeat: '',\n        email: ''\n      },\n      usernameError: '',\n      passwordError: '',\n      passwordRepeatError: '',\n      emailError: '',\n      message: ''\n    };\n  },\n  methods: {\n    validateUsername() {\n      this.usernameError = /^[a-zA-Z][a-zA-Z0-9_-^]{0,31}$/.test(this.formData.username) ? '' : 'Usernames must begin with a letter, and can only contain letters, numbers, and the special characters: -_^';\n    },\n    validatePassword() {\n      this.passwordError = this.formData.password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[-_^$&+,:;=?@#|'<>.^*()%!]).{12,}$/) ? '' : 'Password must be at least 12 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character';\n    },\n    validatePasswordRepeat() {\n      this.passwordRepeatError = this.formData.password === this.formData.password_repeat ? '' : 'Passwords do not match';\n    },\n    validateEmail() {\n      this.emailError = this.formData.email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/) ? '' : 'Invalid email address';\n    },\n    submitForm() {\n      // Form submission logic\n    }\n  }\n};\n</script>\n\n<style>\n.home {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.join-content {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-align: center;\n}\n\n.join-content a {\n  color: rgba(59, 0, 64, 255);\n  text-decoration: none;\n}\n\n.join-content a:hover {\n  text-decoration: underline;\n}\n\n.logo {\n  max-width: 200px;\n  height: auto;\n  margin-bottom: 20px;\n}\n\n.content {\n  max-width: 800px;\n  padding: 20px;\n  align-items: center;\n  text-align: center;\n}\n\n.rounded-button {\n  border: none;\n  border-radius: 50px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-weight: bold;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  margin: 10px;\n}\n\n.sign-up {\n  background-color: rgba(245, 69, 255, 1);\n  color: white;\n}\n\n.chat-now {\n  background-color: rgba(59, 0, 64, 1);\n  color: white;\n}\n\n.enrollment-form input {\n  border-radius: 10px;\n  padding: 5px;\n  margin-bottom: 10px;\n}\n\n.enrollment-form label {\n  display: block;\n}\n\n.enrollment-form button {\n  background-color: rgba(245, 69, 255, 255);\n  color: white;\n  font-weight: bold;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 50px;\n  cursor: pointer;\n}\n\n.enrollment-form button:hover {\n  background-color: rgba(168, 48, 221, 255);\n}\n\n@media (max-width: 768px) {\n  .logo {\n    width: 80%;\n  }\n}\n</style>\n\n"],"mappings":"AA0BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,eAAe,EAAE,EAAE;QACnBC,KAAK,EAAE;MACT,CAAC;MACDC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE,EAAE;MACjBC,mBAAmB,EAAE,EAAE;MACvBC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACN,aAAY,GAAI,gCAAgC,CAACO,IAAI,CAAC,IAAI,CAACZ,QAAQ,CAACC,QAAQ,IAAI,EAAC,GAAI,4GAA4G;IACxM,CAAC;IACDY,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACP,aAAY,GAAI,IAAI,CAACN,QAAQ,CAACE,QAAQ,CAACY,KAAK,CAAC,wEAAwE,IAAI,EAAC,GAAI,qJAAqJ;IAC1R,CAAC;IACDC,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAACR,mBAAkB,GAAI,IAAI,CAACP,QAAQ,CAACE,QAAO,KAAM,IAAI,CAACF,QAAQ,CAACG,eAAc,GAAI,EAAC,GAAI,wBAAwB;IACrH,CAAC;IACDa,aAAaA,CAAA,EAAG;MACd,IAAI,CAACR,UAAS,GAAI,IAAI,CAACR,QAAQ,CAACI,KAAK,CAACU,KAAK,CAAC,4BAA4B,IAAI,EAAC,GAAI,uBAAuB;IAC1G,CAAC;IACDG,UAAUA,CAAA,EAAG;MACX;IAAA;EAEJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}